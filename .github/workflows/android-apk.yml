name: Android APK (auto-scan modules)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: gradle

      - uses: android-actions/setup-android@v3

      - name: Accept SDK licenses
        run: yes | sdkmanager --licenses

      - name: Ensure gradlew
        run: chmod +x android/gradlew || true

      - name: List Gradle projects
        working-directory: android
        run: |
          echo "=== ./gradlew -q projects ==="
          ./gradlew -q projects || true

      - name: Try assembleDebug on each module until one succeeds
        working-directory: android
        run: |
          set -e
          MODS=$(./gradlew -q projects | sed -n "s/^Project '\\(.*\\)'$/\\1/p" | grep '^:' || true)
          echo "Modules détectés: $MODS"
          # Ajoute des candidats courants si la liste est vide
          if [ -z "$MODS" ]; then MODS=":app :android :mobile :capacitor-android"; fi

          SUCCESS=0
          for M in $MODS; do
            echo "➡️  Tentative: ${M}:assembleDebug"
            ./gradlew ${M}:assembleDebug --no-daemon --stacktrace --info && { echo "✅ OK sur $M"; SUCCESS=1; TARGET="$M"; break; } || echo "❌ Échec sur $M"
          done

          if [ "$SUCCESS" = "0" ]; then
            echo "Aucun module n'a build. Modules vus: $MODS"
            exit 1
          fi

          echo "== Listing outputs après build sur $TARGET =="
          find . -type f \( -name "*.apk" -o -name "*.aab" \) -print || true

      - name: Upload artifacts (APK/AAB)
        uses: actions/upload-artifact@v4
        with:
          name: app-builds
          path: |
            android/**/outputs/**/*.apk
            android/**/outputs/**/*.aab
          if-no-files-found: warn
